import nltk
import pandas as pd
import matplotlib.pyplot as plt

tokens = [
    "the",
    "rise",
    "of",
    "artificial",
    "intelligence",
    "has",
    "led",
    "to",
    "significant",
    "advancements",
    "in",
    "natural",
    "language",
    "processing",
    "computer",
    "vision",
    "and",
    "other",
    "fields",
    "machine",
    "learning",
    "algorithms",
    "are",
    "becoming",
    "more",
    "sophisticated",
    "enabling",
    "computers",
    "to",
    "perform",
    "complex",
    "tasks",
    "that",
    "were",
    "once",
    "thought",
    "to",
    "be",
    "the",
    "exclusive",
    "domain",
    "of",
    "humans",
    "with",
    "the",
    "advent",
    "of",
    "deep",
    "learning",
    "neural",
    "networks",
    "have",
    "become",
    "even",
    "more",
    "powerful",
    "capable",
    "of",
    "processing",
    "vast",
    "amounts",
    "of",
    "data",
    "and",
    "learning",
    "from",
    "it",
    "in",
    "ways",
    "that",
    "were",
    "not",
    "possible",
    "before",
    "as",
    "a",
    "result",
    "ai",
    "is",
    "increasingly",
    "being",
    "used",
    "in",
    "a",
    "wide",
    "range",
    "of",
    "industries",
    "from",
    "healthcare",
    "to",
    "finance",
    "to",
    "transportation",
    "and",
    "its",
    "impact",
    "is",
    "only",
    "set",
    "to",
    "grow",
    "in",
    "the",
    "years",
    "to",
    "come",
]
print("tokens: ", tokens)

# unigrams: n=1
n_grams = nltk.ngrams(tokens, 1)
unigrams = (pd.Series(n_grams).value_counts()) 
print("unigrams: ", unigrams[:10])

# bigrams: n=2
n_grams_2 = nltk.ngrams(tokens, 2)
bigrams = (pd.Series(n_grams_2).value_counts()) 
print("bigrams: ", bigrams[:10])
